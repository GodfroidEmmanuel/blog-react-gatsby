{"componentChunkName":"component---node-modules-gatsby-theme-blog-src-templates-post-js","path":"/check","webpackCompilationHash":"","result":{"data":{"post":{"id":"dbb96d7e-1125-5aed-822a-6bafadb56936","title":"Components","date":"August 06, 2019","excerpt":"Components In this chapter, we will learn how to combine components to make the app easier to maintain. This approach allows to update and…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Components\",\n  \"date\": \"2019-08-06T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"Components\"), mdx(\"p\", null, \"In this chapter, we will learn how to combine components to make the app easier to maintain. This approach allows to update and change your components without affecting the rest of the page.\"), mdx(\"p\", null, \"Stateless Example\\nOur first component in the following example is App. This component is owner of Header and Content. We are creating Header and Content separately and just adding it inside JSX tree in our App component. Only App component needs to be exported.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-App.jsx\"\n  }), \"import React from 'react';\\n\\nclass App extends React.Component {\\n   render() {\\n      return (\\n         <div>\\n            <Header/>\\n            <Content/>\\n         </div>\\n      );\\n   }\\n}\\nclass Header extends React.Component {\\n   render() {\\n      return (\\n         <div>\\n            <h1>Header</h1>\\n         </div>\\n      );\\n   }\\n}\\nclass Content extends React.Component {\\n   render() {\\n      return (\\n         <div>\\n            <h2>Content</h2>\\n            <p>The content text!!!</p>\\n         </div>\\n      );\\n   }\\n}\\nexport default App;\\n\")), mdx(\"p\", null, \"To be able to render this on the page, we need to import it in main.js file and call reactDOM.render(). We already did this while setting the environment.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-main.js\"\n  }), \"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './App.jsx';\\n\\nReactDOM.render(<App />, document.getElementById('app'));\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"site":{"siteMetadata":{"title":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"dbb96d7e-1125-5aed-822a-6bafadb56936","excerpt":"Components In this chapter, we will learn how to combine components to make the app easier to maintain. This approach allows to update and…","slug":"/check","title":"Components","date":"August 06, 2019","siteTitle":"Mon blog tuto react","socialLinks":[{"name":"twitter","url":"https://twitter.com/gatsbyjs"},{"name":"github","url":"https://github.com/gatsbyjs"}],"previous":{"node":{"id":"4b0c2205-973e-5246-b3e6-bb9d1f8af56a","excerpt":"JSX\nReact uses JSX for templating instead of regular JavaScript. It is not necessary to use it, however, following are some pros that come…","slug":"/third","title":"JSX !","date":"August 06, 2019"}},"next":null}}}